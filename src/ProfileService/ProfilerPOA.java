package ProfileService;


/**
* ProfileService/ProfilerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/profileservice.idl
* tirsdag 15. september 2020 10.08.36 sentraleuropeisk sommertid
*/

/* The service interface with the methods that can be invoked remotely by clients */
public abstract class ProfilerPOA extends org.omg.PortableServer.Servant
 implements ProfileService.ProfilerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getTimesOrdered", new java.lang.Integer (0));
    _methods.put ("getTimesOrderedByUser", new java.lang.Integer (1));
    _methods.put ("getTopThreeUsersByRestaurant", new java.lang.Integer (2));
    _methods.put ("getTopThreeFoodTypesByZone", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /* Returns how many times a given restaurant had orders from all the users*/
       case 0:  // ProfileService/Profiler/getTimesOrdered
       {
         String restaurant_id = in.read_string ();
         int $result = (int)0;
         $result = this.getTimesOrdered (restaurant_id);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }


  /* Returns how many times a given restaurant had orders from a given user*/
       case 1:  // ProfileService/Profiler/getTimesOrderedByUser
       {
         String user_id = in.read_string ();
         String restaurant_id = in.read_string ();
         int $result = (int)0;
         $result = this.getTimesOrderedByUser (user_id, restaurant_id);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }


  /* Return a list of top three users who have ordered from the restaurant the highest number of times
      	   The list should be sorted in ascending order from the user ranked 3rd to the user ranked 1st.*/
       case 2:  // ProfileService/Profiler/getTopThreeUsersByRestaurant
       {
         String restaurant_id = in.read_string ();
         ProfileService.UserCounter $result[] = null;
         $result = this.getTopThreeUsersByRestaurant (restaurant_id);
         out = $rh.createReply();
         ProfileService.TopThreeUsersHelper.write (out, $result);
         break;
       }


  /* Return a list of top three foods that have the highest number of orders in hte zone.
             The list should be sorted in ascending order from the food ranked 3rd to the food ranked 1st.*/
       case 3:  // ProfileService/Profiler/getTopThreeFoodTypesByZone
       {
         String zone_id = in.read_string ();
         ProfileService.FoodTypeCounter $result[] = null;
         $result = this.getTopThreeFoodTypesByZone (zone_id);
         out = $rh.createReply();
         ProfileService.TopThreeFoodTypesHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ProfileService/Profiler:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Profiler _this() 
  {
    return ProfilerHelper.narrow(
    super._this_object());
  }

  public Profiler _this(org.omg.CORBA.ORB orb) 
  {
    return ProfilerHelper.narrow(
    super._this_object(orb));
  }


} // class ProfilerPOA
