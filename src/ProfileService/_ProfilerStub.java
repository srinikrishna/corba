package ProfileService;


/**
* ProfileService/_ProfilerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/profileservice.idl
* tirsdag 15. september 2020 10.08.36 sentraleuropeisk sommertid
*/


/* The service interface with the methods that can be invoked remotely by clients */
public class _ProfilerStub extends org.omg.CORBA.portable.ObjectImpl implements ProfileService.Profiler
{


  /* Returns how many times a given restaurant had orders from all the users*/
  public int getTimesOrdered (String restaurant_id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTimesOrdered", true);
                $out.write_string (restaurant_id);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTimesOrdered (restaurant_id        );
            } finally {
                _releaseReply ($in);
            }
  } // getTimesOrdered


  /* Returns how many times a given restaurant had orders from a given user*/
  public int getTimesOrderedByUser (String user_id, String restaurant_id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTimesOrderedByUser", true);
                $out.write_string (user_id);
                $out.write_string (restaurant_id);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTimesOrderedByUser (user_id, restaurant_id        );
            } finally {
                _releaseReply ($in);
            }
  } // getTimesOrderedByUser


  /* Return a list of top three users who have ordered from the restaurant the highest number of times
      	   The list should be sorted in ascending order from the user ranked 3rd to the user ranked 1st.*/
  public ProfileService.UserCounter[] getTopThreeUsersByRestaurant (String restaurant_id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTopThreeUsersByRestaurant", true);
                $out.write_string (restaurant_id);
                $in = _invoke ($out);
                ProfileService.UserCounter $result[] = ProfileService.TopThreeUsersHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTopThreeUsersByRestaurant (restaurant_id        );
            } finally {
                _releaseReply ($in);
            }
  } // getTopThreeUsersByRestaurant


  /* Return a list of top three foods that have the highest number of orders in hte zone.
             The list should be sorted in ascending order from the food ranked 3rd to the food ranked 1st.*/
  public ProfileService.FoodTypeCounter[] getTopThreeFoodTypesByZone (String zone_id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTopThreeFoodTypesByZone", true);
                $out.write_string (zone_id);
                $in = _invoke ($out);
                ProfileService.FoodTypeCounter $result[] = ProfileService.TopThreeFoodTypesHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTopThreeFoodTypesByZone (zone_id        );
            } finally {
                _releaseReply ($in);
            }
  } // getTopThreeFoodTypesByZone

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ProfileService/Profiler:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ProfilerStub
